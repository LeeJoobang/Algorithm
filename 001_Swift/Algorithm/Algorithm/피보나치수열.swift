//
//  피보나치수열.swift
//  Algorithm
//
//  Created by Jooyoung Lee on 2022/12/28.
//

import Foundation

/*
 피보나치 수
 
 문제 설명
 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.
 예를들어
 F(2) = F(0) + F(1) = 0 + 1 = 1
 F(3) = F(1) + F(2) = 1 + 1 = 2
 F(4) = F(2) + F(3) = 1 + 2 = 3
 F(5) = F(3) + F(4) = 2 + 3 = 5
 와 같이 이어집니다.
 
 2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.
 제한 사항
 n은 2 이상 100,000 이하인 자연수입니다.

 입출력 예
 n    return
 3    2
 5    5
 
 문제 해결
 피보나치 - 이전 값을 계속해서 참조해 더할 값을 가져온다. 그래서 반복문을 사용함. a의 경우 이전 반복문의 b값을 가져오고, b의 경우 이전 반복문의 합을 가져온다.
 여기서 %1234567의 나머지를 사용한 이유는 큰 값 - int의 자료형 -2,147,483,648 ~ 2,147,483,647 의 범위까지만 표현할 수 있기 때문에 나머지를 통해 진행하였다.
 */

func solution(_ n:Int) -> Int {
    var ans = 0
    var a = 0
    var b = 1
    if n == 1 || n == 0 { return n }
   
    for _ in 2...n{
        ans = (a + b) % 1234567
        a = b
        b = ans
    }
    return ans
}
